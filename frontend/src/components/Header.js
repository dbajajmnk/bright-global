import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { FaBars, FaTimes } from 'react-icons/fa';
import logo from '../assets/techlambda logo.png';
const Header = () => {
    const [aboutOpen, setAboutOpen] = useState(false);
    const [servicesOpen, setServicesOpen] = useState(false);
    const [coursesOpen, setCoursesOpen] = useState(false);
    const [mobileOpen, setMobileOpen] = useState(false);
    const location = useLocation();
    const isActive = (path) => location.pathname === path;
    return (_jsxs("header", { className: "bg-white shadow sticky top-0 z-50", children: [_jsxs("div", { className: "max-w-7xl mx-auto px-4 py-4 flex justify-between items-center", children: [_jsx(Link, { to: "/", children: _jsx("img", { src: logo, alt: "TechLambda Logo", className: "h-10 w-auto object-contain" }) }), _jsxs("nav", { className: "hidden sm:flex gap-6 text-base relative", children: [_jsx(Link, { to: "/", className: isActive('/') ? 'text-primary font-semibold' : 'hover:text-primary', children: "Home" }), _jsxs("div", { className: "relative", children: [_jsx("button", { onClick: () => {
                                            setAboutOpen(prev => !prev);
                                            setServicesOpen(false);
                                            setCoursesOpen(false);
                                        }, className: "cursor-pointer hover:text-primary font-medium", children: "About" }), aboutOpen && (_jsxs("div", { className: "absolute top-full mt-2 bg-white shadow-lg rounded-lg p-3 space-y-2 z-20 w-64", children: [_jsx(Link, { to: "/about", className: "block px-4 py-2 rounded hover:bg-gray-100 text-sm text-textPrimary", children: "Overview" }), _jsx(Link, { to: "/vision", className: "block px-4 py-2 rounded hover:bg-gray-100 text-sm text-textPrimary", children: "Vision" }), _jsx(Link, { to: "/mission", className: "block px-4 py-2 rounded hover:bg-gray-100 text-sm text-textPrimary", children: "Mission" }), _jsx(Link, { to: "/team", className: "block px-4 py-2 rounded hover:bg-gray-100 text-sm text-textPrimary", children: "Our Team" }), _jsx(Link, { to: "/expert-apply", className: "block px-4 py-2 rounded hover:bg-gray-100 text-sm text-textPrimary", children: "Apply as Expert" })] }))] }), _jsxs("div", { className: "relative", children: [_jsx("button", { onClick: () => {
                                            setServicesOpen(prev => !prev);
                                            setAboutOpen(false);
                                            setCoursesOpen(false);
                                        }, className: "cursor-pointer hover:text-primary font-medium", children: "Services" }), servicesOpen && (_jsx("div", { className: "absolute top-full mt-2 bg-white shadow-lg rounded-lg p-3 space-y-2 z-20 w-72", children: [['software-development', 'Custom Software Development'], ['web-app-development', 'Web & Mobile App Development'], ['ui-ux', 'UI/UX Design'], ['cloud-devops', 'Cloud & DevOps Solutions'], ['ai-ml', 'AI, ML & Automation'], ['cybersecurity', 'Cybersecurity & Compliance'], ['it-consulting', 'IT Consulting & Support'], ['assignments', 'Academic Projects & Assignments'], ['tutoring', 'Live Tutoring & Doubt Solving'], ['final-year-projects', 'Final Year Project Guidance']].map(([path, name]) => (_jsx(Link, { to: `/services/${path}`, className: "block px-4 py-2 rounded hover:bg-gray-100 text-sm text-textPrimary", children: name }, path))) }))] }), _jsxs("div", { className: "relative", children: [_jsx("button", { onClick: () => {
                                            setCoursesOpen(prev => !prev);
                                            setAboutOpen(false);
                                            setServicesOpen(false);
                                        }, className: "cursor-pointer hover:text-primary font-medium", children: "Courses Offered" }), coursesOpen && (_jsx("div", { className: "absolute top-full mt-2 bg-white shadow-lg rounded-lg p-3 space-y-2 z-20 w-72 max-h-96 overflow-y-auto", children: [['azure', 'Azure (Beginner to Expert)'], ['test-automation', 'Test Automation Frameworks'], ['angular', 'Angular Development'], ['web-design', 'Web & Graphic Design'], ['front-end', 'HTML, CSS & JavaScript'], ['selenium-java', 'Selenium with Java'], ['powerbi', 'Power BI Dashboards'], ['react', 'React.js Development'], ['csharp-selenium', 'C# with Selenium'], ['springboot-rest', 'Spring Boot & REST APIs'], ['data-science', 'Data Science with Python & Tableau'], ['game-dev', 'Game Development'], ['mern-stack', 'MERN Stack (Node, Express, MongoDB)'], ['aws-devops', 'AWS & DevOps'], ['ml-opencv', 'ML, DL & OpenCV in Python'], ['android', 'Android App Development'], ['dotnet-api', 'ASP.NET Core Web API'], ['flutter', 'Flutter App Development'], ['security', 'Cybersecurity & Cloud Security'], ['java-fullstack', 'Full Stack Java Development']].map(([path, name]) => (_jsx(Link, { to: `/course/${path}`, className: "block px-4 py-2 rounded hover:bg-gray-100 text-sm text-textPrimary", children: name }, path))) }))] }), _jsx(Link, { to: "/contact", className: isActive('/contact') ? 'text-primary font-semibold' : 'hover:text-primary', children: "Contact" })] }), _jsx("button", { onClick: () => setMobileOpen(!mobileOpen), className: "sm:hidden text-2xl text-primary", children: mobileOpen ? _jsx(FaTimes, {}) : _jsx(FaBars, {}) })] }), _jsxs("div", { className: `sm:hidden fixed top-0 left-0 h-full w-3/4 max-w-xs bg-white shadow-md z-40 transform transition-transform duration-300 ease-in-out ${mobileOpen ? 'translate-x-0' : '-translate-x-full'}`, children: [_jsxs("div", { className: "p-4 border-b flex justify-between items-center", children: [_jsx("img", { src: logo, alt: "TechLambda Logo", className: "h-8 w-auto" }), _jsx("button", { onClick: () => setMobileOpen(false), className: "text-xl text-primary", children: _jsx(FaTimes, {}) })] }), _jsxs("nav", { className: "flex flex-col space-y-4 p-4 text-textPrimary overflow-y-auto h-full pb-20", children: [_jsx(Link, { to: "/", onClick: () => setMobileOpen(false), children: "Home" }), _jsx(Link, { to: "/about", onClick: () => setMobileOpen(false), children: "Overview" }), _jsx(Link, { to: "/vision", onClick: () => setMobileOpen(false), children: "Vision" }), _jsx(Link, { to: "/mission", onClick: () => setMobileOpen(false), children: "Mission" }), _jsx(Link, { to: "/team", onClick: () => setMobileOpen(false), children: "Our Team" }), _jsx(Link, { to: "/expert-apply", onClick: () => setMobileOpen(false), children: "Apply as Expert" }), _jsx(Link, { to: "/contact", onClick: () => setMobileOpen(false), children: "Contact" }), _jsx("hr", {}), _jsx("span", { className: "font-semibold", children: "Services" }), [['software-development', 'Custom Software Development'], ['web-app-development', 'Web & Mobile App Development'], ['ui-ux', 'UI/UX Design'], ['cloud-devops', 'Cloud & DevOps Solutions'], ['ai-ml', 'AI, ML & Automation'], ['cybersecurity', 'Cybersecurity & Compliance'], ['it-consulting', 'IT Consulting & Support'], ['assignments', 'Academic Projects & Assignments'], ['tutoring', 'Live Tutoring & Doubt Solving'], ['final-year-projects', 'Final Year Project Guidance']].map(([path, name]) => (_jsx(Link, { to: `/services/${path}`, onClick: () => setMobileOpen(false), children: name }, path))), _jsx("hr", {}), _jsx("span", { className: "font-semibold", children: "Courses" }), [['azure', 'Azure'], ['test-automation', 'Test Automation'], ['angular', 'Angular'], ['web-design', 'Web & Graphic Design'], ['front-end', 'HTML, CSS & JS'], ['selenium-java', 'Selenium Java'], ['powerbi', 'Power BI'], ['react', 'React.js'], ['csharp-selenium', 'C# Selenium'], ['springboot-rest', 'Spring Boot'], ['data-science', 'Data Science'], ['game-dev', 'Game Dev'], ['mern-stack', 'MERN Stack'], ['aws-devops', 'AWS DevOps'], ['ml-opencv', 'ML & OpenCV'], ['android', 'Android'], ['dotnet-api', 'ASP.NET Core'], ['flutter', 'Flutter'], ['security', 'Cybersecurity'], ['java-fullstack', 'Full Stack Java']].map(([path, name]) => (_jsx(Link, { to: `/course/${path}`, onClick: () => setMobileOpen(false), children: name }, path)))] })] }), mobileOpen && (_jsx("div", { className: "sm:hidden fixed inset-0 bg-black bg-opacity-40 z-30", onClick: () => setMobileOpen(false) }))] }));
};
export default Header;
